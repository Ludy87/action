name: 'Merge or Close PR'
description: ''
inputs:
  token:
    required: false
    description: 'GitHub auth token'
    default: ${{ github.token }}

runs:
  using: composite
  steps:
    - name: Set Label on Merge
	  if: ${{ github.event_name == 'pull_request' && github.event.action != 'reopened' && github.event.pull_request.merged }}
      # if: ${{ github.event.pull_request.merged }}
      uses: actions/github-script@v6.4.1
      with:
        github-token: ${{ inputs.token }}
        script: |
          const prNumber = context.payload.pull_request.number;
          console.log(`Processing PR number ${prNumber}`);
          await github.rest.issues.addLabels({
            owner: context.repo.owner,
            repo: context.repo.repo,
            issue_number: prNumber,
            labels: ['PR: released']
          });

          const pullRequestLabels = await github.rest.issues.listLabelsOnIssue({
            owner: context.repo.owner,
            repo: context.repo.repo,
            issue_number: prNumber
          });

          const labelNames = pullRequestLabels.data.map(label => label.name);
          const labelsToRemove = ['in progress', 'wait'];
          const labelsToRemoveFiltered = labelsToRemove.filter(label => labelNames.includes(label));

          for (const labelToRemove of labelsToRemoveFiltered) {
            await github.rest.issues.removeLabel({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: prNumber,
              name: labelToRemove
            });
          }
    - name: Set Label on Reject
      if: ${{ github.event_name == 'pull_request' && github.event.action != 'reopened' && !github.event.pull_request.merged }}
      # if: ${{ !github.event.pull_request.merged }}
      uses: actions/github-script@v6.4.1
      with:
        github-token: ${{ inputs.token }}
        script: |
          const prNumber = context.payload.pull_request.number;
          console.log(`Processing PR number ${prNumber}`);
          await github.rest.issues.addLabels({
            owner: context.repo.owner,
            repo: context.repo.repo,
            issue_number: prNumber,
            labels: ['PR: rejected']
          });

          const pullRequestLabels = await github.rest.issues.listLabelsOnIssue({
            owner: context.repo.owner,
            repo: context.repo.repo,
            issue_number: prNumber
          });

          const labelNames = pullRequestLabels.data.map(label => label.name);
          const labelsToRemove = ['in progress', 'wait'];
          const labelsToRemoveFiltered = labelsToRemove.filter(label => labelNames.includes(label));

          for (const labelToRemove of labelsToRemoveFiltered) {
            await github.rest.issues.removeLabel({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: prNumber,
              name: labelToRemove
            });
          }
    - name: Set Label on Reopened
      if: ${{ github.event_name == 'pull_request' && github.event.action == 'reopened' }}
      uses: actions/github-script@v6.4.1
      with:
        github-token: ${{ inputs.token }}
        script: |
          const prNumber = context.payload.pull_request.number;
          console.log(`Processing PR number ${prNumber}`);
          await github.rest.issues.addLabels({
            owner: context.repo.owner,
            repo: context.repo.repo,
            issue_number: prNumber,
            labels: ['PR: reopened']
          });

          const pullRequestLabels = await github.rest.issues.listLabelsOnIssue({
            owner: context.repo.owner,
            repo: context.repo.repo,
            issue_number: prNumber
          });

          const labelNames = pullRequestLabels.data.map(label => label.name);
          const labelsToRemove = ['PR: rejected', 'PR: released'];
          const labelsToRemoveFiltered = labelsToRemove.filter(label => labelNames.includes(label));

          for (const labelToRemove of labelsToRemoveFiltered) {
            await github.rest.issues.removeLabel({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: prNumber,
              name: labelToRemove
            });
          }

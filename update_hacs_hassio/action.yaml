name: 'hacs.json update'
description: ''
inputs:
  token:
    required: true
    description: 'GitHub auth token'
    default: ${{ github.token }}

runs:
  using: composite
  steps:
    - name: Check if hacs.json file exists
      id: hacs_json_exists
      shell: bash
      run: |
        if test -f ${{ github.workspace }}/hacs.json; then
          echo "match=true" >> $GITHUB_ENV
        else
          echo "match=false" >> $GITHUB_ENV
        fi
    - name: Get latest Home Assistant version
      id: hassversion
      shell: bash
      run: |
        latest_version_homeassistant=$(curl -sL https://api.github.com/repos/home-assistant/core/releases/latest | jq -r '.tag_name' | sed -e 's/v//')
        echo "Latest version Home-Assistant: $latest_version_homeassistant"
        echo "version_hassio=$latest_version_homeassistant" >> $GITHUB_ENV
        latest_version_hacs=$(curl -sL https://api.github.com/repos/hacs/integration/releases/latest | jq -r '.tag_name' | sed -e 's/v//')
        echo "Latest version HACS: $latest_version_hacs"
        echo "version_hacs=$latest_version_hacs" >> $GITHUB_ENV
    - name: Read JSON file and set environment variables
      if: steps.hacs_json_exists.outputs.match == 'true'
      env:
        JSON_FILE: ${{ github.workspace }}/hacs.json
      shell: bash
      run: |
        homeassistant=$(jq -r '.homeassistant' "${JSON_FILE}")
        hacs=$(jq -r '.hacs' "${JSON_FILE}")
        echo "homeassistant=${homeassistant}" >> $GITHUB_ENV
        echo "hacs=${hacs}" >> $GITHUB_ENV
    
    - name: Check status
      if: steps.hacs_json_exists.outputs.match == 'true'
      id: check_status
      shell: bash
      run: |
          if [ "${{ env.version_hacs }}" == "null" ] || [ "${{ env.version_hassio }}" == "null" ]; then
              echo "match=true" >> $GITHUB_OUTPUT
          fi
          if [ "${{ env.hacs }}" = "${{ env.version_hacs }}" ]; then
              echo "hacs_equal=${{ env.hacs }} (no update)" >> $GITHUB_ENV
          else
              echo "hacs_equal=${{ env.hacs }} â†’ ${{ env.version_hacs }}" >> $GITHUB_ENV
          fi
          if [ "${{ env.homeassistant }}" = "${{ env.version_hassio }}" ]; then
              echo "hassio_equal=${{ env.homeassistant }} (no update)" >> $GITHUB_ENV
          else
              echo "hassio_equal=${{ env.homeassistant }} â†’ ${{ env.version_hassio }}" >> $GITHUB_ENV
          fi
    
    - name: Update hacs.json file
      if: steps.hacs_json_exists.outputs.match == 'true' && steps.check_status.outputs.match != 'true'
      shell: bash
      run: |
        python3 ${{ github.action_path }}/scripts/update/hacs.py --hversion ${{ env.version_hassio }} --version ${{ env.version_hacs }}
    
    - name: Create Pull Request
      if: steps.hacs_json_exists.outputs.match == 'true' && steps.check_status.outputs.match != 'true'
      uses: peter-evans/create-pull-request@v5.0.2
      with:
        token: ${{ inputs.token }}
        commit-message: Update hacs.json file
        committer: GitHub Action <action@github.com>
        author: GitHub Action <action@github.com>
        signoff: true
        branch: "update_hacs_hassio"
        delete-branch: true
        title: 'ðŸ”¨ Update hacs.json file by <github-actions[bot]>'
        body: |
            Update report
            - HACS version: ${{ env.hacs_equal }}
            - Home-Assistant version: ${{ env.hassio_equal }}
            
            Auto-generated by [create-pull-request][1]
    
            [1]: https://github.com/peter-evans/create-pull-request
        labels: |
            wait
            in progress
            bot
        reviewers: Ludy87
        draft: false
